There are many different types of cloud service ecosystems all dleivering varying levels of management for applications, data, and their underlying infrastructure. 

Self Managed - Usually called on-prem or on-site, Self-Managed simply means everything -- hardware, networking, apps and data are all managed by the consumer either on-prem or co-located. This typically involves self-managed hardware in racks in a datacenter with limited virtualization of resources. Self-Managed isn't exactly a cloud service offering, but is included here to illustrate the increasing levels of management. 

Iaas (Infrastructure as a Service) - This is a step away from on premises infrastructure. It's a pay-as-you-go service where a third party provides you with infrastructure services, like storage and virtualization, as you need them, via a cloud, through the internet. 
    As the consumer, you are responsible for the operating system, runtimes, data, and applications; a provider gives you access to, and management of, the network, servers,hardware virtualization, and storage you need.
    This eliminates the need to maintain your own datacenter. Instead, you access and control the infrastructure via a command line interface (CLI) or web dashboard. 
    Iaas gives you flexibility to purchase only the components you need and scale them up or down as needed. There's low overhead and maintenance costs, making Iaas a very affordable option. 
        Examples - AWS EC2, GOOGLE CE, and AZURE VM. 

Caas (Container as a Service) - This is a cloud service that offers container-based virtual computing to users, some refer to CaaS as a subset of Iaas. CaaS seervice providers offer their clients a full-fledged framework where they can perform deployment and management of applications, clusters, and containers. Without CaaS, software development teams need to deploy, manage, and monitor the inderlying infrastructure that containers run on. 
    The Caas model was created to let developers create, execute, and manage applicaions that are container-based. A CaaS model is signified by the service provider offering clusters and containers and services. 
    Caas enables development teams to think at the higher order container level instead of dealing with all the lower-level infrastructure management. 
        Examples - AWS EC2, Azure AKS, and Docker cloud

PaaS (Platform as a Service) - This is another step further from a full, on-prem infrastructure management. A provider hosts the hardware and software on its own infrastructure and delivers this platform to the user as an integrated solution, solution stack, or service through an internet connection. 
    Primarily useful for developers and programmers, PaaS allows the user to develop, run, and manage their own apps without having to build and maintain the infrastructure or platform usually associated with the process. External resources, such as databases, and queues are configured and attached to runtime containers by the platform. Developers can use built-in provisioned resources to create their applications. 
    The consumer writes, builds, and manages their apps, but they do it without the headaches of software updates, hardware maintenance or containerization. The consumer pushes an uncontainerized application and the platform figures out how to deploy. 
        Examples - AWS Elastic Beanstalk, Heroku, Cloudfoundry, Azure Spring Apps, and Red Hat OpenShift. 

Faas (Function as a Service) - Function as a service is much like PaaS in that the platform provides virtualized resources to run single purpose serverless functions. Depending on the provider, a FaaS solution may require containerization prior to deployment. Generally, FaaS deployments do not have running instances unless they are currently being used. As such, FaaS is good cost-savings strategy for functionality that is rarely used, or has big fluctuations in load. 

SaaS (Software as a Service) - Software as a service is cloud-hosted, ready to use application software. Consumers pay a monthly or annual fee to use a complete application from siwhtin a web browser, desktop client or mobile app. THe application and all of the infrastructure required to deliver it - servers, storage, networking, and middleware, application software, data storage are hosted and managed by the Saas vendor. 
    The vendor manages all upgrades and patches to the software, usually invisibly to con